//--------------------------------------------------------------------------------------------------
//= Sdraw.hsp
//--------------------------------------------------------------------------------------------------
//　描画処理
//--------------------------------------------------------------------------------------------------

	//----------------------------------------------------------------------------------------------
	//= 下書きアルファマップ
	//----------------------------------------------------------------------------------------------
		gsel SCR_DRAFT_ALPHA

			//--------------------------------------------------------------------------------------
			//=画面初期化 
			//--------------------------------------------------------------------------------------
				gosub *__ClearScreen

	//----------------------------------------------------------------------------------------------
	//= 下書きウィンドウ
	//----------------------------------------------------------------------------------------------
		gsel SCR_DRAFT

			//--------------------------------------------------------------------------------------
			//= 画面初期化
			//--------------------------------------------------------------------------------------
				gosub *__ClearScreen

			//--------------------------------------------------------------------------------------
			//= コンボカウンター描画
			//--------------------------------------------------------------------------------------
				if( ComboCounterShow == TRUE )&&( PJEndFlag == FALSE ){
					repeat PLAYER_NUMBER
						if( ComboCounterFlag(cnt) == TRUE ){
							x = BASE_POS_X+FRAME_SIZE_W*cnt	:	y = BASE_POS_Y
							pos x+ComboCounterPosX(cnt), y+ComboCounterPosY(cnt)
							CCDraw ComboCounter(cnt), SCR_DRAFT,		SCR_CCFONT
							//下書きアルファマップへも描画
							pos x+ComboCounterPosX(cnt), y+ComboCounterPosY(cnt)
							CCDraw ComboCounter(cnt), SCR_DRAFT_ALPHA,	SCR_CCFONT_ALPHA
						}
					loop
				}

	//----------------------------------------------------------------------------------------------
	//= OPSウィンドウアルファマップ
	//----------------------------------------------------------------------------------------------
		gsel SCR_OPS_ALPHA

		//------------------------------------------------------------------------------------------
		//= 画面初期化
		//------------------------------------------------------------------------------------------
			gosub *__ClearScreen

		//------------------------------------------------------------------------------------------
		//= 下書きアルファマップからコピー
		//------------------------------------------------------------------------------------------
			gmode 0
			pos 0, 0
			ImgP_gzoom ginfo_winx, ginfo_winy, SCR_DRAFT_ALPHA, 0, 0, DRAFT_WINDOW_SIZE_W, DRAFT_WINDOW_SIZE_H

	//----------------------------------------------------------------------------------------------
	//= OPSウィンドウ
	//----------------------------------------------------------------------------------------------
		gsel SCR_OPS

		//------------------------------------------------------------------------------------------
		//= 画面更新停止, 初期化
		//------------------------------------------------------------------------------------------
			redraw 0
			gosub *__ClearScreen

		//------------------------------------------------------------------------------------------
		//= 下書きウィンドウからコピー
		//------------------------------------------------------------------------------------------
			gmode 0
			pos 0, 0
			ImgP_gzoom ginfo_winx, ginfo_winy, SCR_DRAFT, 0, 0, DRAFT_WINDOW_SIZE_W, DRAFT_WINDOW_SIZE_H

		//------------------------------------------------------------------------------------------
		//= 再描画
		//------------------------------------------------------------------------------------------
			redraw 1

		//------------------------------------------------------------------------------------------
		//= ウィンドウ位置/サイズ調整, 表示/非表示
		//------------------------------------------------------------------------------------------
			//PJがアクティブの場合最前面に、そうでない場合は非表示にする
			GetForegroundWindow: ActiveWindowHandle = stat
			if( ActiveWindowHandle == PJWindowHandle ){
				PJWindowActiveFlag = TRUE
				if( OPSWindowShowFlag == FALSE ){
					OPSWindowShowFlag = TRUE
					gsel SCR_OPS, 2
				}
			} else {
				PJWindowActiveFlag = FALSE
				if( OPSWindowShowFlag == TRUE ){
					OPSWindowShowFlag = FALSE
					gsel SCR_OPS, -1
				}
			}

			//PJの解像度に合わせてリサイズ
			dim rect,	4
			GetClientRect PJWindowHandle, varptr(rect)
			GameScreenW = rect(2)
			GameScreenH = GameScreenW*3/4
			DrawSizeW = limit(GameScreenW, 1, ginfo_dispx)
			DrawSizeH = limit(DrawSizeW/10, 1, ginfo_dispy)
			if( ginfo_winx != DrawSizeW )||( ginfo_winy != DrawSizeH ){
				buffer	SCR_OPS_ALPHA,	DrawSizeW, DrawSizeH
				bgscr	SCR_OPS,		DrawSizeW, DrawSizeH, 2
			}

			//PJのウィンドウに位置を合わせる
			dim position, 2
			ClientToScreen PJWindowHandle, varptr(position)
			GameScreenX	= position(0)
			GameScreenY = position(1)
			DrawPosX = GameScreenX+(GameScreenW*OPS_POS_X/100)
			DrawPosY = GameScreenY+(GameScreenH*OPS_POS_Y/100)
			if( ginfo_wx1 != DrawPosX )||( ginfo_wy1 != DrawPosY ){
				width ,, DrawPosX, DrawPosY
			}

		//------------------------------------------------------------------------------------------
		//= レイヤードウィンドウ処理
		//------------------------------------------------------------------------------------------
			enableAlphaBlendWindow SCR_OPS_ALPHA
			gsel SCR_OPS, 1